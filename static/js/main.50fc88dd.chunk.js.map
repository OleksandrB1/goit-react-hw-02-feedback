{"version":3,"sources":["components/Feedback/Feedback.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/Section/Section.js","App.js","index.js","components/Statistics/Statistics.module.css","components/Feedback/Feedback.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","className","s","feedbackControls","map","item","button","onClick","type","Statistics","good","neutral","bad","total","positivePercentage","statisticsContainer","value","Notification","message","Section","title","children","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","clickButton","setState","prevState","this","Feedback","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gRA0BeA,EAtBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,8BACE,qBAAKC,UAAWC,IAAEC,iBAAlB,SACGJ,EAAQK,KAAI,SAACC,GAAD,OACX,wBAEEJ,UAAWC,IAAEI,OACbC,QAAS,kBAAMP,EAAgBK,IAC/BG,KAAK,SAJP,SAMGH,GALIA,W,gBCaAI,EAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,sBAAKb,UAAWC,IAAEa,oBAAlB,UACE,uBAAMd,UAAWC,IAAEc,MAAnB,mBAAiCN,KACjC,uBAAMT,UAAWC,IAAEc,MAAnB,sBAAoCL,KACpC,uBAAMV,UAAWC,IAAEc,MAAnB,kBAAgCJ,KAChC,uBAAMX,UAAWC,IAAEc,MAAnB,oBAAkCH,KAClC,uBAAMZ,UAAWC,IAAEc,MAAnB,gCAA8CF,EAA9C,WCGWG,EAVM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,8BACE,6BAAKA,OCSMC,EAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,6BAAKD,IACJC,MCACC,E,4MACJC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPY,mBAAqB,WACnB,MAA+B,EAAKD,MACpC,OADA,EAAQb,KAAR,EAAcC,QAAd,EAAuBC,K,EAGzBa,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKJ,MAAMb,KAAO,EAAKc,qBAAwB,M,EAGpEI,YAAc,SAACvB,GACb,EAAKwB,UAAS,SAACC,GAAD,sBACXzB,EAAOyB,EAAUzB,GAAQ,O,4CAI9B,WACE,MAA+B0B,KAAKR,MAA5Bb,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,gCACE,cAAC,EAAD,CAASQ,MAAM,wBAAf,SACE,cAACY,EAAD,CACEjC,QAASkC,OAAOC,KAAKH,KAAKR,OAC1BvB,gBAAiB+B,KAAKH,gBAG1B,cAAC,EAAD,CAASR,MAAM,aAAf,SACGW,KAAKP,qBAAuB,EAC3B,cAAC,EAAD,CACEd,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOkB,KAAKP,qBACZV,mBAAoBiB,KAAKN,oCAG3B,cAAC,EAAD,CAAcP,QAAQ,+B,GA1ChBiB,aAkDHb,ICnDfc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,oBAAsB,wCAAwC,MAAQ,4B,kBCAxFD,EAAOC,QAAU,CAAC,iBAAmB,mCAAmC,OAAS,yBAAyB,WAAa,gC","file":"static/js/main.50fc88dd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport s from \"./Feedback.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div>\r\n    <div className={s.feedbackControls}>\r\n      {options.map((item) => (\r\n        <button\r\n          key={item}\r\n          className={s.button}\r\n          onClick={() => onLeaveFeedback(item)}\r\n          type=\"button\"\r\n        >\r\n          {item}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport s from \"./Statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <div className={s.statisticsContainer}>\r\n    <span className={s.value}>Good: {good}</span>\r\n    <span className={s.value}>Neutral: {neutral}</span>\r\n    <span className={s.value}>Bad: {bad}</span>\r\n    <span className={s.value}>Total: {total}</span>\r\n    <span className={s.value}>Positive feedback: {positivePercentage}%</span>\r\n  </div>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => (\r\n  <div>\r\n    <h2>{message}</h2>\r\n  </div>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\r\nimport FeedbackOptions from \"./components/Feedback/Feedback\";\r\nimport Statistics from \"./components/Statistics/Statistics\";\r\nimport Notification from \"./components/Notification/Notification\";\r\nimport Section from \"./components/Section/Section\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n  countPositiveFeedbackPercentage = () => {\r\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\r\n  };\r\n\r\n  clickButton = (item) => {\r\n    this.setState((prevState) => ({\r\n      [item]: prevState[item] + 1,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={Object.keys(this.state)}\r\n            onLeaveFeedback={this.clickButton}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {this.countTotalFeedback() > 0 ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsContainer\":\"Statistics_statisticsContainer__3t_Ru\",\"value\":\"Statistics_value__2YNFR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackControls\":\"Feedback_feedbackControls__3oxYR\",\"button\":\"Feedback_button__2VgvA\",\"statistics\":\"Feedback_statistics__2IUiA\"};"],"sourceRoot":""}